class Atletas {
  constructor(nome, idade, peso, altura, notas) {
    this.nome = nome
    this.idade = idade
    this.peso = peso
    this.altura = altura
    this.notas = notas
  }
  calculaCategoria() {
     if(this.idade >= 9 && this.idade <= 11) {
        return "Infantil"
      }
      else if(this.idade >= 12 && this.idade <= 13) {
        return "Juvenil"
      }
     else if(this.idade >= 14 && this.idade <= 15) {
        return "IntermediÃ¡rio"
      }
     else if(this.idade >= 16 && this.idade <= 30) {
        return "Adulto"
      }
        return "Sem categoria"
    }
  calculaIMC() {
     return this.peso / (this.altura * this. altura)
    }
  calculaMediaValida() {
     let notasParaCalulo = this.notas.sort()
     let matrizCortada = notasParaCalulo.slice(notasParaCalulo[0], notasParaCalulo[notasParaCalulo.length - 1])
     let somaDasNotas = this.matrizCortada.reduce(function(total, atual){
        return total + atual
        }, 0)
     return somaDasNotas / matrizCortada.length
  }
  obtemNomeAtleta() {
    return this.nome
    }
  obtemIdadeAtleta() {
    return this.idade
    }
  obtemPesoAtleta() {
    return this.peso
    }
  obtemNotasAtleta() {
    return this.notas
    }
  obtemCategoria() {
    return calculaCategoria()
    }
  obtemIMC() {
    return calculaIMC()
    }
  obtemMediaValida() {
    return calculaMediaValida()
    }
}
